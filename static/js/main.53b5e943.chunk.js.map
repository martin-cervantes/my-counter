{"version":3,"sources":["actions/index.js","reducers/index.js","components/Button.js","components/Display.js","containers/Counter.js","index.js"],"names":["INCREMENT","DECREMENT","initialState","count","counterReducer","state","action","type","Button","props","text","clickHandle","class","onClick","Display","Counter","increment","bind","decrement","this","dispatch","React","Component","connect","store","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"4MAAaA,EAAY,YACZC,EAAY,YCCzB,IAAMC,EAAe,CACnBC,MAAO,GAkBMC,MAff,WAAuD,IAA/BC,EAA8B,uDAAtBH,EAAcI,EAAQ,uCACpD,OAAOA,EAAOC,MACZ,KAAKP,EACH,MAAO,CACLG,MAAOE,EAAMF,MAAQ,GAEzB,KAAKF,EACH,MAAO,CACLE,MAAOE,EAAMF,MAAQ,GAEzB,QACE,OAAOE,I,uCCfE,SAASG,EAAOC,GAAQ,IAC7BC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YAEd,OACE,wBAAQC,MAAM,SAASC,QAASF,EAAhC,SAA+CD,ICJpC,SAASI,EAAQL,GAAQ,IAC9BC,EAASD,EAATC,KAER,OACE,sBAAME,MAAM,UAAZ,SAAwBF,I,ICCtBK,E,kDACJ,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IAEDO,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAJA,E,wDAQjBE,KAAKV,MAAMW,SJZN,CAAEb,KAAMP,M,kCIgBbmB,KAAKV,MAAMW,SJZN,CAAEb,KAAMN,M,+BIgBb,OACE,sBAAKW,MAAM,UAAX,UACE,oBAAIA,MAAM,QAAV,qBACA,sBAAKA,MAAM,aAAX,UACE,cAACJ,EAAD,CAAQE,KAAK,IAAIC,YAAaQ,KAAKD,YACnC,cAACJ,EAAD,CAASJ,KAAMS,KAAKV,MAAMN,QAC1B,cAACK,EAAD,CAAQE,KAAK,IAAIC,YAAaQ,KAAKH,sB,GAvBvBK,IAAMC,WAoCbC,mBANf,SAAyBlB,GACvB,MAAO,CACLF,MAAOE,EAAMF,SAIFoB,CAAyBR,GClClCS,EAAQC,YAAYrB,GAEpBsB,EAAM,kBACV,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACE,cAAC,EAAD,OAIJG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.53b5e943.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\n\nexport function counterIncrement() {\n  return { type: INCREMENT };\n}\n\nexport function counterDecrement() {\n  return { type: DECREMENT };\n}\n","import { INCREMENT, DECREMENT } from '../actions';\n\nconst initialState = {\n  count: 0\n};\n\nfunction counterReducer(state = initialState, action) {\n  switch(action.type) {\n    case INCREMENT:\n      return {\n        count: state.count + 1\n      };\n    case DECREMENT:\n      return {\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n}\n\nexport default counterReducer;\n","import React from 'react';\n\nexport default function Button(props) {\n  const { text, clickHandle } = props;\n\n  return (\n    <button class=\"button\" onClick={clickHandle}>{ text }</button>\n  );\n}\n","import React from 'react';\n\nexport default function Display(props) {\n  const { text } = props;\n\n  return (\n    <span class=\"display\">{ text }</span>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { counterIncrement, counterDecrement } from '../actions';\n\nimport Button from '../components/Button';\nimport Display from '../components/Display';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n  }\n\n  increment() {\n    this.props.dispatch(counterIncrement());\n  }\n\n  decrement() {\n    this.props.dispatch(counterDecrement());\n  }\n\n  render() {\n    return (\n      <div class=\"counter\">\n        <h2 class=\"title\">Counter</h2>\n        <div class=\"countainer\">\n          <Button text=\"-\" clickHandle={this.decrement} />\n          <Display text={this.props.count} />\n          <Button text=\"+\" clickHandle={this.increment} />\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    count: state.count\n  };\n}\n\nexport default connect(mapStateToProps)(Counter);\n","import './css/style.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport counterReducer from './reducers';\r\n\r\nimport Counter from './containers/Counter';\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Counter/>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}